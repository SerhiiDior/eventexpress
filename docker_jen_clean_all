pipeline { 
    agent any 
    options {
        skipStagesAfterUnstable()
        timestamps()
    }
    stages {
        stage('stop containers') { 
            steps {
                catchError (buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                echo "========== kill containers =========="
                sh 'docker docker kill $(docker ps -q) ' 
            }
        }
    }  
        
        stage('delete images') {
            steps {
                catchError (buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                sh 'docker rmi $(docker images -q) -f'
            }
        }
     }
     
        stage('delete volumes') {
            steps {
                catchError (buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                sh 'docker system prune --volumes -f'
            }
        }
     }
   }
}
