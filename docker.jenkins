#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'docker_svdior', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login -u $USERNAME -p $PASSWORD
                    """
                }
            }
        }
        
        stage("del_c){
            steps {
                echo " ============== del all con =================="
                 sh '''
                 docker rm $(docker ps -aq)
                
                  '''
        }
    } 
        stage("del_i){
             steps {
                echo " ============== del all images =================="
                sh '''
                 docker rmi $(docker images -q)
                '''
        }
    } 
      stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                	sh """ docker build -t svdior/event:latest ."""
                
            }
        }
        
        stage("push hub"){
            steps {
                echo " ============== push to hub =================="
                sh '''
                docker push svdior/event:latest
                '''
        }
    } 
        stage("run test"){
            steps {
                echo " ============== del all images =================="
                sh '''
                docker rmi $(docker images -q)
                '''
        }
    } 
}
}
