#!groovy
// Run docker 
properties([disableConcurrentBuilds()])

pipeline { 
    agent any 
    options {
        skipStagesAfterUnstable()
        timestamps()
    }
    environment {
        CONTAINER_NAME = "allure"   
    }
   
    
    stages {
       
        
        
        stage('Allure_Report') {
            steps {
                catchError (buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                sh 'docker run -d --rm --name alure -p 4040:4040 -p 5050:5050 -e CHECK_RESULTS_EVERY_SECONDS=3 -e KEEP_HISTORY="TRUE" -v Allure:/app/allure-results frankescobar/allure-docker-service'
            }
        }
     }
        
        stage('get data from allure container'){
            steps {
                script {
                    environment {
                        
                        CONTAINER_ID = '${sh(docker inspect --format="{{.ID}}" alure) }'
                        CONTAINER_IP = sh 'docker inspect -f "{{ .NetworkSettings.IPAddress }}" 230c033b28a1'
                 }
                    
                }
                  echo "$env.CONTAINER_NAME"
                
            }
        }
   
         stage('Test'){
            steps {
                
                sh 'docker run --rm -v directory:/workdir svdior/pyslim python send_resalt.py'
                 
            }
        }
        
    }
}









