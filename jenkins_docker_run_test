#!groovy
// Run docker 
properties([disableConcurrentBuilds()])

pipeline { 
    agent any 
    options {
        skipStagesAfterUnstable()
        timestamps()
    }
    environment {
        CONTAINER_NAME = "allure" 
        CONTAINER_IP = ''
        CONTAINER_ID = ''
    }
   
    
    stages {
       stage('Allure_Report') {
            steps {
                catchError (buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                sh 'docker run -d --rm --name alure -p 4040:4040 -p 5050:5050 -e CHECK_RESULTS_EVERY_SECONDS=3 -e KEEP_HISTORY="TRUE" -v Allure:/app/allure-results frankescobar/allure-docker-service'
            }
        }
     }
        
        stage('get container IP') {
            environment {
                    CONTAINER_ID = sh(script:'docker inspect --format="{{.ID}}" alure',returnStdout: true)
                    CONTAINER_IP = sh(script:'docker inspect -f \"{{ .NetworkSettings.IPAddress }}\" \"${env.CONTAINER_ID}\"', returnStdout: true)
                     
                }
            steps {
                
                echo "$env.CONTAINER_IP"
            
            }
        
        }
        
        
         stage('Test'){
            steps {
                
                sh 'docker run --rm -v directory:/workdir svdior/pyslim python send_resalt.py'
                 
            }
        }
        
    }
}


